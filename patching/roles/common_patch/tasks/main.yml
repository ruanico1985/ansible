- name: Halt VM
  virt:
    name: '{{ inventory_hostname }}'
    state: shutdown
  delegate_to: localhost

# Pending: Take snapshot

- name: Boot VM
  virt:
    name: '{{ inventory_hostname }}'
    state: running
  delegate_to: localhost

- name: Disable server {{ inventory_hostname }} in all Haproxy pools (if any)
  haproxy:
    state: disabled
    host: '{{ inventory_hostname }}'
    socket: /var/run/haproxy/admin.sock
    fail_on_not_found: no
  delegate_to: haproxy

- name: Disable SELINUX, only for testing
  selinux:
    state: disabled
  when: ansible_facts['os_family'] == "RedHat"

- name: Patch the server {{ inventory_hostname }}
  include_tasks: '{{ item }}'
  vars:
    params:
      files:
        - util/Patch.{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_major_version'] }}.yml
        - util/Patch.{{ ansible_facts['distribution'] }}.yml
        - util/Patch.{{ ansible_facts['os_family'] }}.yml
  loop: "{{ q('first_found', params, errors='ignore') }}"
  register: resultado

- name: Reboot server
  reboot:
    connect_timeout: 600
  when: resultado is changed




